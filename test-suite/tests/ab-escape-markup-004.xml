<t:test xmlns:t="http://xproc.org/ns/testsuite/3.0" expected="pass">
   <t:info>
      <t:title>p:escape-markup 004</t:title>
      <t:revision-history>
         <t:revision>
            <t:date>2019-06-30</t:date>
            <t:author>
               <t:name>Achim Berndzen</t:name>
            </t:author>
            <t:description xmlns="http://www.w3.org/1999/xhtml">
               <p>Fixed schematron tests to handle text nodes correctly.</p>
            </t:description>
         </t:revision>
         <t:revision>
            <t:date>2019-06-23</t:date>
            <t:author>
               <t:name>Achim Berndzen</t:name>
            </t:author>
            <t:description xmlns="http://www.w3.org/1999/xhtml">
               <p>Tests for p:escape-markup</p>
            </t:description>
         </t:revision>
      </t:revision-history>
   </t:info>
   <t:description xmlns="http://www.w3.org/1999/xhtml">
      <p>Tests p:escape-markup: Comment and processing instructions are preserved on surrounding document.</p>
   </t:description>
   
   <t:pipeline>
      <p:declare-step xmlns:p="http://www.w3.org/ns/xproc" name="pipeline" version="3.0">
         <p:output port="result"/>
         <p:escape-markup>
            <p:with-input>
               <p:inline>
                  <!--comment -->
                  <?pi target?>
                  <body-wrapper><doc/></body-wrapper>
                  <!--comment -->
                  <?pi target?>
               </p:inline>
            </p:with-input>
         </p:escape-markup>
         
         <p:wrap-sequence wrapper="wrapper" />
      </p:declare-step>
   </t:pipeline>
   <t:schematron>
      <s:schema xmlns:s="http://purl.oclc.org/dsdl/schematron" xmlns="http://www.w3.org/1999/xhtml">
         <s:pattern>
             <s:rule context="/">
                <s:assert test="wrapper">Document element is not wrapper.</s:assert>
                <s:assert test="count(wrapper/node())=9">Document element should have 11 children.</s:assert>
                <s:assert test="wrapper/node()[1] instance of comment()">First child should be comment.</s:assert>
                <s:assert test="wrapper/node()[3] instance of processing-instruction()">Second child should be pi.</s:assert>
                <s:assert test="wrapper/node()[5] instance of element()">Third child should be element.</s:assert>
                <s:assert test="wrapper/node()[7] instance of comment()">Fourth child should be comment.</s:assert>
                <s:assert test="wrapper/node()[9] instance of processing-instruction()">Fifth child should be pi.</s:assert>
               </s:rule>
         </s:pattern>
      </s:schema>
   </t:schematron>
</t:test>
