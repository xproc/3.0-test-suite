<?xml version="1.0" encoding="UTF-8"?>
<t:test expected="pass"
        features="p-validate-with-dtd"
        xmlns:t="http://xproc.org/ns/testsuite/3.0">
   <t:info>
      <t:title>ab-validate-with-dtd-006</t:title>
      <t:revision-history>
         <t:revision>
            <t:date>2024-08-15</t:date>
            <t:author>
               <t:name>Achim Berndzen</t:name>
            </t:author>
            <t:description xmlns="http://www.w3.org/1999/xhtml">
               <p>Initial check in.</p>
            </t:description>
         </t:revision>
      </t:revision-history>
   </t:info>
   <t:description xmlns="http://www.w3.org/1999/xhtml">
      <p>Test DTD validation: doctype-system in document's and step's serialization map: step's map should win. 
         Document is valid, so there should be no detection in xvrl.</p>
   </t:description>
   <t:pipeline>
      <p:declare-step name="pipeline"
                      version="3.0"
                      xmlns:p="http://www.w3.org/ns/xproc">
         <p:output port="result"/>
         <p:validate-with-dtd serialization="map{'doctype-system' : 'i-do-not-exist'}">
            <p:with-input>
               <p:inline document-properties="map{'serialization' : 
                                                   map{'doctype-system' : '../documents/address.dtd'}
                                                 }">
                  <address >
                     <first>Douglas</first>
                     <last>Adams</last>
                     <phone>42</phone>
                  </address>
               </p:inline>
            </p:with-input>
         </p:validate-with-dtd>
         <p:identity>
            <p:with-input pipe="report" />
         </p:identity>
      </p:declare-step>
   </t:pipeline>
   <t:schematron>
      <s:schema queryBinding="xslt2"
         xmlns:s="http://purl.oclc.org/dsdl/schematron"
         xmlns="http://www.w3.org/1999/xhtml">
         <s:ns uri="http://www.xproc.org/ns/xvrl"
            prefix="xvrl"/>
         <s:pattern>
            <s:rule context="/">
               <s:assert test="//xvrl:report">There is no xvrl:report element.</s:assert>
               <s:assert test="not(exists(//xvrl:report//xvrl:detection))">There should be no element 'xvrl:detection'.</s:assert>
            </s:rule>
         </s:pattern>
      </s:schema>
   </t:schematron>
</t:test>