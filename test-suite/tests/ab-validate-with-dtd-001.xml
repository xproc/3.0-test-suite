<?xml version="1.0" encoding="UTF-8"?>
<t:test expected="pass"
        features="p-validate-with-dtd"
        xmlns:t="http://xproc.org/ns/testsuite/3.0">
   <t:info>
      <t:title>ab-validate-with-dtd-001</t:title>
      <t:revision-history>
         <t:revision>
            <t:date>2024-08-14</t:date>
            <t:author>
               <t:name>Achim Berndzen</t:name>
            </t:author>
            <t:description xmlns="http://www.w3.org/1999/xhtml">
               <p>Initial check in.</p>
            </t:description>
         </t:revision>
      </t:revision-history>
   </t:info>
   <t:description xmlns="http://www.w3.org/1999/xhtml">
      <p>Test DTD validation: doctype-system in step's serialization map.</p>
   </t:description>
   <t:pipeline>
      <p:declare-step name="pipeline"
                      version="3.0"
                      xmlns:p="http://www.w3.org/ns/xproc">
         <p:output port="result"/>
         <p:validate-with-dtd serialization="map{'doctype-system' : '../documents/address.dtd'}">
            <p:with-input>
               <address >
                  <first>Douglas</first>
                  <last>Adams</last>
                  <phone>42</phone>
               </address>
            </p:with-input>
         </p:validate-with-dtd>
      </p:declare-step>
   </t:pipeline>
   <t:schematron>
      <s:schema queryBinding="xslt2"
                xmlns:s="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.w3.org/1999/xhtml">
         <s:pattern>
            <s:rule context="/">
               <s:assert test="address">The document is not 'address'.</s:assert>
               <s:assert test="address/first">There is no child element 'first'.</s:assert>
               <s:assert test="address/first/text() = 'Douglas'">There is no text child in first with 'Douglas'.</s:assert>
               <s:assert test="address/last">There is no child element 'last'.</s:assert>
               <s:assert test="address/last/text() = 'Adams'">There is no text child in last with 'Adam'.</s:assert>
               <s:assert test="address/phone">There is no child element 'phone'.</s:assert>
               <s:assert test="address/phone/text() = '42'">There is no text child in phone with '42'.</s:assert>
            </s:rule>
         </s:pattern>
      </s:schema>
   </t:schematron>
</t:test>