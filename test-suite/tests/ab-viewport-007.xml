<t:test xmlns:t="http://xproc.org/ns/testsuite/3.0" expected="pass">
   <t:info>
      <t:title>viewport-007 (AB)</t:title>
      <t:revision-history>
         <t:revision>
            <t:date>2019-09-18</t:date>
            <t:author>
               <t:name>Achim Berndzen</t:name>
            </t:author>
            <t:description xmlns="http://www.w3.org/1999/xhtml">
               <p>Additional tests for p:viewport (partly ported from 1.0)</p>
            </t:description>
         </t:revision>
      </t:revision-history>
   </t:info>
   <t:description xmlns="http://www.w3.org/1999/xhtml">
      <p>Test <code>p:viewport</code> with <code>p:output</code>
         that is bound to a sequence of (inline) documents.</p>
   </t:description>
   <t:pipeline>
      <p:declare-step xmlns:p="http://www.w3.org/ns/xproc" version="3.0">
         <p:output port="result"/>
         <p:viewport match="para" name="viewport">
            <p:with-input>
               <doc>
                  <para>Some paragraph.</para>
                  <para>Some paragraph.</para>
                  <para>Some paragraph.</para>
                  <para>
                     <para>Nested paragraph.</para>
                  </para>
               </doc>
            </p:with-input>    
            <p:output port="tmp" sequence="true">
               <p:inline><foo/></p:inline>
               <p:inline><bar/></p:inline>
            </p:output>
            <p:identity>
               <p:with-input port="source">
                  <p:inline><baz/></p:inline>
               </p:with-input>
            </p:identity>
            <p:sink/>
         </p:viewport>
      </p:declare-step>
   </t:pipeline>
   <t:schematron>
      <s:schema xmlns:s="http://purl.oclc.org/dsdl/schematron" xmlns="http://www.w3.org/1999/xhtml">
         <s:pattern>
            <s:rule context="/">
               <s:assert test="doc">The document root is not 'doc'.</s:assert>
               <s:assert test="doc/*[1]/name()='foo'">First child is not 'foo'.</s:assert>
               <s:assert test="doc/*[2]/name()='bar'">Second child is not 'bar'.</s:assert>
               <s:assert test="doc/*[3]/name()='foo'">Third child is not 'foo'.</s:assert>
               <s:assert test="doc/*[4]/name()='bar'">Fourth child is not 'bar'.</s:assert>
               <s:assert test="doc/*[5]/name()='foo'">Fifth child is not 'foo'.</s:assert>
               <s:assert test="doc/*[6]/name()='bar'">Sixth child is not 'bar'.</s:assert>
               <s:assert test="doc/*[7]/name()='foo'">Seventh child is not 'foo'.</s:assert>
               <s:assert test="doc/*[8]/name()='bar'">Eighth child is not 'bar'.</s:assert>-->
            </s:rule>
          </s:pattern>
      </s:schema>
   </t:schematron>
</t:test>