<test xmlns='http://xproc.org/ns/testsuite/3.0' expected="pass">
  <pipeline>
<p:declare-step xmlns:p="http://www.w3.org/ns/xproc"
                xmlns:c="http://www.w3.org/ns/xproc-step"
                name="main" version="3.0">
  <p:output port="result" sequence="true"/>

  <p:identity name="inline">
    <p:with-input port="source">
      <p:inline document-properties="map { xs:QName('content-type'): 'text/plain' }"
                >Hello, world.</p:inline>
    </p:with-input>
  </p:identity>

  <p:identity name="properties">
    <p:with-input port="source" select="p:document-properties-document(.)"/>
  </p:identity>

  <p:wrap-sequence wrapper="c:result">
    <p:with-input port="source" pipe="@properties @inline"/>
  </p:wrap-sequence>

</p:declare-step>
  </pipeline>

  <schematron>
    <s:schema xmlns:s="http://purl.oclc.org/dsdl/schematron"
              xmlns:p="http://www.w3.org/ns/xproc"
              xmlns:c="http://www.w3.org/ns/xproc-step">
      <s:ns prefix="p" uri="http://www.w3.org/ns/xproc"/>
      <s:ns prefix="c" uri="http://www.w3.org/ns/xproc-step"/>

      <s:pattern>
        <s:rule context="/*">
          <s:assert test="self::c:result">The pipeline root is not c:result</s:assert>
          <s:assert test="p:document-properties">
            The result does not include p:document-properties
          </s:assert>
          <s:assert test="(text())[1] = 'Hello, world.'">
            The result does not have the required text
          </s:assert>
          <s:assert test="p:document-properties/content-type = 'text/plain'">
            The content type of the result is not text/plain
          </s:assert>
        </s:rule>
      </s:pattern>
    </s:schema>
  </schematron>
</test>
