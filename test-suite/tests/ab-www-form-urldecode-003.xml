<?xml version="1.0" encoding="UTF-8"?>
<t:test expected="pass"
        xmlns:t="http://xproc.org/ns/testsuite/3.0">
   <t:info>
      <t:title>p:www-form-urldecode 003 (AB)</t:title>
      <t:revision-history>
         <t:revision>
            <t:date>2021-07-22</t:date>
            <t:author>
               <t:name>Achim Berndzen</t:name>
            </t:author>
            <t:description xmlns="http://www.w3.org/1999/xhtml">
               <p>New test added.</p>
            </t:description>
         </t:revision>
      </t:revision-history>
   </t:info>
   <t:description xmlns="http://www.w3.org/1999/xhtml">
      <p>Tests p:www-form-urldecode</p>
   </t:description>
   <t:pipeline>
      <p:declare-step name="pipeline"
                      version="3.0"
                      xmlns:map="http://www.w3.org/2005/xpath-functions/map"
                      xmlns:p="http://www.w3.org/ns/xproc"
                      exclude-inline-prefixes="map">
         <p:output port="result"/>
         <p:www-form-urldecode>
            <p:with-option name="value" select="'key=value1&amp;key=value2'" />
         </p:www-form-urldecode>
         
        <p:identity>
           <p:with-input>
              <result>
                 <keys>{map:keys(.)}</keys>
                 <count>{count(.?key)}</count>
                 <first>{.?key[1]}</first>
                 <second>{.?key[2]}</second>
              </result>
           </p:with-input>
        </p:identity>
      </p:declare-step>
   </t:pipeline>
   <t:schematron>
      <s:schema queryBinding="xslt2"
                xmlns:s="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.w3.org/1999/xhtml">/>
         <s:pattern>
            <s:rule context="/">
               <s:assert test="result/keys/text()='key'">The content of 'keys' is not 'key'.</s:assert>
               <s:assert test="result/count/text()='2'">The content of 'count' is not '2'.</s:assert>
               <s:assert test="result/first/text()='value1'">The content of 'first' is not 'value1'.</s:assert>
               <s:assert test="result/second/text()='value2'">The content of 'second' is not 'value2'.</s:assert>
            </s:rule>
         </s:pattern>
      </s:schema>
   </t:schematron>
</t:test>