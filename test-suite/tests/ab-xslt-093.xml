<t:test xmlns:t="http://xproc.org/ns/testsuite/3.0" expected="pass" features="xslt-3">
   <t:info>
      <t:title>AB-xslt-093</t:title>
      <t:revision-history>
         <t:revision>
            <t:date>2020-06-11</t:date>
            <t:author>
               <t:name>Achim Berndzen</t:name>
            </t:author>
            <t:description xmlns="http://www.w3.org/1999/xhtml">
               <p>Added tests for p:xslt with version="3.0".</p>
            </t:description>
         </t:revision>
      </t:revision-history>
   </t:info>
   <t:description xmlns="http://www.w3.org/1999/xhtml">
      <p>Tests global-context-item is set correctly.</p>
   </t:description>
   <t:pipeline>
      <p:declare-step xmlns:p="http://www.w3.org/ns/xproc" version="3.0">
         <p:output port="result"/>
           <p:xslt version="3.0">
            <p:with-input>
               <doc att="present"/>
               <doc2 />
            </p:with-input>
            <p:with-input port="stylesheet">       
               <xsl:stylesheet version="3.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                  xmlns:xs="http://www.w3.org/2001/XMLSchema">
                  <xsl:variable name="gci" as="xs:string?">
                     <xsl:try>
                        <xsl:sequence select="./doc/@att"/>
                        <xsl:catch>
                           <xsl:value-of select="'absent'" />
                        </xsl:catch>
                     </xsl:try>
                  </xsl:variable>
                  <xsl:template match="/">
                     <result>
                        <xsl:value-of select="$gci" />
                     </result>
                  </xsl:template>
               </xsl:stylesheet>
            </p:with-input>
         </p:xslt>
         <p:wrap-sequence wrapper="wrapper" />
      </p:declare-step>
   </t:pipeline>
   <t:schematron>
      <s:schema xmlns:s="http://purl.oclc.org/dsdl/schematron" xmlns="http://www.w3.org/1999/xhtml">
         <s:pattern>
            <s:rule context="/">
               <s:assert test="wrapper">The document root is not 'wrapper'.</s:assert>
               <s:assert test="wrapper/result[1]/text()='absent'">The text in result is not 'absent'.</s:assert>
               <s:assert test="wrapper/result[2]/text()='absent'">The text in result is not 'absent'.</s:assert>
               
            </s:rule>
         </s:pattern>
      </s:schema>
   </t:schematron>
</t:test>