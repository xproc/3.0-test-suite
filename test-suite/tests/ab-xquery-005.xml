<t:test xmlns:t="http://xproc.org/ns/testsuite/3.0" expected="pass">
   <t:info>
      <t:title>p:xquery 005 (AB)</t:title>
      <t:revision-history>
         <t:revision>
            <t:date>2019-09-13</t:date>
            <t:author>
               <t:name>Achim Berndzen</t:name>
            </t:author>
            <t:description xmlns="http://www.w3.org/1999/xhtml">
               <p>Tests for p:xquery (Partly ported from 1.0)</p>
            </t:description>
         </t:revision>
      </t:revision-history>
   </t:info>
   <t:description xmlns="http://www.w3.org/1999/xhtml">
      <p>Tests p:xquery</p>
   </t:description>
   
   <t:input port="source">
      <authors>
         <author>
            <firstname>William</firstname>
            <lastname>Shakespeare</lastname>
         </author>
         <author>
            <firstname>Christopher</firstname>
            <lastname>Marlowe</lastname>
         </author>
         <author>
            <firstname>Ben</firstname>
            <lastname>Johnson</lastname>
         </author>
      </authors>
   </t:input>
   
   <t:pipeline>
      <p:declare-step xmlns:p="http://www.w3.org/ns/xproc" version="3.0">
         <p:input port="source" />
         <p:output port="result"/>
         
         <p:xquery parameters="map{'str' : 'Will', 'test:str' : 'Chris'}" xmlns:test="http://www.test.com">
            <p:with-input port="query">
               <c:query xmlns:c="http://www.w3.org/ns/xproc-step">
                  declare namespace test = "http://www.test.com";
                  declare variable $str external;
                  declare variable $test:str external;
                  
                  for $author in //author[contains(firstname, $str) or contains(firstname, $test:str)]
                  order by $author/firstname
                  return $author
               </c:query>               
            </p:with-input>
         </p:xquery>
         
         <p:wrap-sequence wrapper="wrapper" />
      </p:declare-step>
   </t:pipeline>
   <t:schematron>
      <s:schema xmlns:s="http://purl.oclc.org/dsdl/schematron" xmlns="http://www.w3.org/1999/xhtml">
         <s:pattern>
            <s:rule context="/">
               <s:assert test="wrapper">Root element is not 'wrapper'.</s:assert>
            </s:rule>
         </s:pattern>
      </s:schema>
   </t:schematron>
</t:test>