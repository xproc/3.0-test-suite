<t:test xmlns:t="http://xproc.org/ns/testsuite/3.0" expected="pass">
   <t:info>
      <t:title>viewport-004 (AB)</t:title>
      <t:revision-history>
         <t:revision>
            <t:date>2019-09-18</t:date>
            <t:author>
               <t:name>Achim Berndzen</t:name>
            </t:author>
            <t:description xmlns="http://www.w3.org/1999/xhtml">
               <p>Additional tests for p:viewport (partly ported from 1.0)</p>
            </t:description>
         </t:revision>
      </t:revision-history>
   </t:info>
   <t:description xmlns="http://www.w3.org/1999/xhtml">
      <p>Test <code>p:viewport</code> with no matching nodes.</p>
   </t:description>
   <t:pipeline>
      <p:declare-step xmlns:p="http://www.w3.org/ns/xproc" version="3.0">
         <p:output port="result"/>
         <p:viewport match="i-do-not-exist">
            <p:with-input>
               <doc>
                  <para>Some paragraph.</para>
                  <para>Some paragraph.</para>
                  <para>Some paragraph.</para>
                  <para>
                     <para>Nested paragraph.</para>
                  </para>
               </doc>
            </p:with-input>
            <p:identity>
               <p:with-input>
                  <i-should-not-apper-in-the-output-of-the-viewport/>
               </p:with-input>
            </p:identity>
         </p:viewport>
      </p:declare-step>
   </t:pipeline>
   <t:schematron>
      <s:schema xmlns:s="http://purl.oclc.org/dsdl/schematron" xmlns="http://www.w3.org/1999/xhtml">
         <s:pattern>
            <s:rule context="/">
               <s:assert test="doc">The document root is not 'doc'.</s:assert>
               <s:assert test="count(doc/*)=4">Document root should have four child elements.</s:assert>
               <s:assert test="count(doc/para)=4">Document root should four child elements 'para'.</s:assert>
               <s:assert test="doc/para[1]/text()='Some paragraph.'">Text in para[1] is not 'Some paragraph.'</s:assert>
               <s:assert test="doc/para[2]/text()='Some paragraph.'">Text in para[2] is not 'Some paragraph.'</s:assert>
               <s:assert test="doc/para[3]/text()='Some paragraph.'">Text in para[3] is not 'Some paragraph.'</s:assert>
               <s:assert test="doc/para[4]/para/text()='Nested paragraph.'">para[4]/para is not 'Nested paragraph.'.</s:assert>
            </s:rule>
         </s:pattern>
      </s:schema>
   </t:schematron>
</t:test>