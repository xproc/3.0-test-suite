<?xml version="1.0" encoding="UTF-8"?>
<t:test expected="pass"
        xmlns:t="http://xproc.org/ns/testsuite/3.0">
   <t:info>
      <t:title>Empty document test 6(AB)</t:title>
      <t:revision-history>
         <t:revision>
            <t:date>2022-05-08</t:date>
            <t:author>
               <t:name>Achim Berndzen</t:name>
            </t:author>
            <t:description xmlns="http://www.w3.org/1999/xhtml">
               <p>Initial version.</p>
            </t:description>
         </t:revision>
      </t:revision-history>
   </t:info>
   <t:description xmlns="http://www.w3.org/1999/xhtml">
      <p>Tests that documents with an empty document node have the right content-type.</p>
   </t:description>
   <t:pipeline>
      <p:declare-step version="3.0"
                      xmlns:p="http://www.w3.org/ns/xproc">
         <p:output port="result"/>
         <p:xslt version="3.0" template-name="start">
            <p:with-input><p:empty/></p:with-input>
            <p:with-input port="stylesheet">
               <xsl:stylesheet version="3.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                  <xsl:template name="start" >
                     <xsl:result-document href="something" />
                  </xsl:template>
               </xsl:stylesheet>
            </p:with-input>
         </p:xslt>    
         <p:identity>
            <p:with-input pipe="secondary" />
         </p:identity>
         <p:identity>
            <p:with-input><result>
               <content-type>{p:document-property(., 'content-type')}</content-type>
               <children>{count(//node())}</children>
            </result></p:with-input>
         </p:identity>
      </p:declare-step>
   </t:pipeline>
   <t:schematron>
      <s:schema queryBinding="xslt2"
                xmlns:s="http://purl.oclc.org/dsdl/schematron">
         <s:pattern>
            <s:rule context="/">
               <s:assert test="result">The root element is not 'result'.</s:assert>
               <s:assert test="result/content-type/text()='application/xml'">The result's content-type is not "application/xml".</s:assert>
               <s:assert test="result/children/text()='0'">The result's number of children is not 0.</s:assert>
            </s:rule>
         </s:pattern>
      </s:schema>
   </t:schematron>
</t:test>